---
- name: Update the system
  community.general.pacman:
    update_cache: true
    upgrade: true
  become: true

- name: Install dependencies
  community.general.pacman:
    name: "{{ item }}"
    state: latest
  loop: "{{ packages }}"
  become: true

- name: Check if user-dirs.dirs exists
  ansible.builtin.stat:
    path: /home/{{ username }}/.config/user-dirs.dirs
  register: user_dirs

- name: Update xdg user dirs if file doesn't exist
  ansible.builtin.shell: xdg-user-dirs-update
  when: not user_dirs.stat.exists
  changed_when: not user_dirs.stat.exists

- name: Check if paru is installed
  ansible.builtin.shell: which paru
  register: paru_check
  ignore_errors: true
  changed_when: false

- name: Ensure rustup default toolchain is set
  ansible.builtin.shell: rustup default stable
  when: paru_check.rc != 0
  changed_when: paru_check.rc != 0

- name: Install paru
  ansible.builtin.shell: "cd /home/{{ username }} && git clone https://aur.archlinux.org/paru.git && cd paru && makepkg -si --noconfirm"
  when: paru_check.rc != 0
  ignore_errors: true
  changed_when: paru_check.rc != 0

- name: Check if eww is installed
  ansible.builtin.shell: which eww
  register: eww_check
  ignore_errors: true
  changed_when: false

- name: Install eww
  ansible.builtin.shell: paru -S eww --skipreview --noconfirm
  when: eww_check.rc != 0
  changed_when: eww_check.rc != 0

- name: Cleanup unncessary files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ cleanup_folders }}"

- name: Ensure mpd service is enabled
  ansible.builtin.systemd:
    name: mpd
    state: started
    enabled: true
  become: true
  ignore_errors: true
